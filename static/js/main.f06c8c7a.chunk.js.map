{"version":3,"sources":["Setup.js","Background.js","Questions.js","helpers.js","SidePanel.js","EndGame.js","Game.js","App.js","index.js"],"names":["Setup","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","difficulty","options","value","onSubmitHandler","bind","assertThisInitialized","onChangeHandler","redirect","event","preventDefault","_this$state","trim","length","props","onSubmit","alert","history","push","_event$target","target","setState","defineProperty","item","react_default","a","createElement","key","label","className","htmlFor","id","onChange","map","renderOption","React","Component","Background","children","Questions","renderAnswer","answer","index","onClick","onAnswerClick","String","fromCharCode","_this$props","question","answers","questionsList","price","isGuaranteed","SidePanel","renderItem","_ref","questionNumber","isCurrent","lastQuestionIndex","isAnswered","console","log","concat","EndGame","hasWon","WonPrice","reward","slice","find","_ref3","getGuaranteedReward","username","Link","to","Game","questions","currentQuestionNumber","getQuestions","checkAnswer","hasStarted","replace","_this2","axios","get","params","then","_ref$data$results","data","results","_ref2","category","correctAnswer","correct_answer","incorrectAnswers","incorrect_answers","_this3","prevState","isFinished","_ref$incorrectAnswers","src_EndGame","src_Background","src_Questions","shuffle","toConsumableArray","src_SidePanel","App","setupGame","callback","BrowserRouter","Switch","Route","exact","path","render","src_Setup","src_Game","ReactDOM","src_App","document","getElementById"],"mappings":"mRAiGeA,cA5FX,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CACTC,KAAM,GACNC,WAAYT,EAAKU,QAAQ,GAAGC,OAEhCX,EAAKY,gBAAkBZ,EAAKY,gBAAgBC,KAArBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KACvBA,EAAKe,gBAAkBf,EAAKe,gBAAgBF,KAArBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KACvBA,EAAKgB,SAAWhB,EAAKgB,SAASH,KAAdZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KARNA,+EA6BGiB,GACbA,EAAMC,iBADc,IAAAC,EAMhBhB,KAAKI,MAFLC,EAJgBW,EAIhBX,KACAC,EALgBU,EAKhBV,WAGAD,EAAKY,OAAOC,OAIhBlB,KAAKmB,MAAMC,SAASf,EAAMC,EAAYN,KAAKa,UAHvCQ,MAAM,yDASVrB,KAAKmB,MAAMG,QAAQC,KAAK,iDAGXT,GAAO,IAAAU,EAIhBV,EAAMW,OAFNpB,EAFgBmB,EAEhBnB,KACAG,EAHgBgB,EAGhBhB,MAGJR,KAAK0B,SAAL5B,OAAA6B,EAAA,EAAA7B,CAAA,GACKO,EAAQG,yCAKJoB,GACT,OACIC,EAAAC,EAAAC,cAAA,UAAQC,IAAKJ,EAAKpB,MAAOA,MAAOoB,EAAKpB,OAChCoB,EAAKK,wCAMd,OACIJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,cACXL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,UAAUd,SAAUpB,KAAKS,iBACrCoB,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,OAAOD,UAAU,kBAAhC,QACAL,EAAAC,EAAAC,cAAA,SAAO1B,KAAK,OAAO+B,GAAG,OAAOF,UAAU,mBAAmB1B,MAAOR,KAAKI,MAAMC,KAAMgC,SAAUrC,KAAKY,kBAElGiB,EAAAC,EAAAC,cAAA,SAAOI,QAAQ,aAAaD,UAAU,kBAAtC,cACAL,EAAAC,EAAAC,cAAA,UAAQG,UAAU,mBAAmB7B,KAAK,aAAa+B,GAAG,aAAa5B,MAAOR,KAAKI,MAAME,WAAY+B,SAAUrC,KAAKY,iBAC9GZ,KAAKO,QAAQ+B,IAAItC,KAAKuC,eAE3BV,EAAAC,EAAAC,cAAA,UAAQG,UAAU,mBAAlB,4CApEZ,MAAO,CACH,CACI1B,MAAO,OACPyB,MAAO,QAEX,CACIzB,MAAO,SACPyB,MAAO,UAEX,CACIzB,MAAO,OACPyB,MAAO,gBAzBHO,IAAMC,mBCYXC,EAbI,SAAAvB,GAEf,OACIU,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACVf,EAAMwB,WCuCJC,6MAxCXC,aAAe,SAACC,EAAQC,GAEpB,OACIlB,EAAAC,EAAAC,cAAA,MACIC,IAAKe,EACLb,UAAU,aACVc,QAASnD,EAAKsB,MAAM8B,cAAcH,IAElCjB,EAAAC,EAAAC,cAAA,QAAMG,UAAU,qBACXgB,OAAOC,aAAa,GAAKJ,GAD9B,KACwCD,6EAO1C,IAAAM,EAIFpD,KAAKmB,MAFLkC,EAFED,EAEFC,SACAC,EAHEF,EAGFE,QAGJ,OACIzB,EAAAC,EAAAC,cAAA,OAAKG,UAAU,eACXL,EAAAC,EAAAC,cAAA,KAAGG,UAAU,iCACRmB,GAELxB,EAAAC,EAAAC,cAAA,MAAIG,UAAU,qBACToB,EAAQhB,IAAItC,KAAK6C,uBA9BdL,IAAMC,4BCiBjBc,EAAgB,CAC3B,CACEC,MAAO,IACPC,cAAc,GAEhB,CACED,MAAO,IACPC,cAAc,GAEhB,CACED,MAAO,KACPC,cAAc,GAEhB,CACED,MAAO,MACPC,cAAc,GAEhB,CACED,MAAO,KACPC,cAAc,GAEhB,CACED,MAAO,IACPC,cAAc,GAEhB,CACED,MAAO,IACPC,cAAc,GAEhB,CACED,MAAO,IACPC,cAAc,GAEhB,CACED,MAAO,IACPC,cAAc,GAEhB,CACED,MAAO,IACPC,cAAc,GAEhB,CACED,MAAO,IACPC,cAAc,GAEhB,CACED,MAAO,IACPC,cAAc,IChBHC,6MA1CXC,WAAa,SAAAC,EAAwBb,GAAU,IAAhCS,EAAgCI,EAAhCJ,MAAOC,EAAyBG,EAAzBH,aAEdI,EACAhE,EAAKsB,MADL0C,eAGEC,EAAYD,IAAoBhE,EAAKkE,kBAAoBhB,EACzDiB,EAAaH,EAAkBhE,EAAKkE,kBAAoBhB,EAC9DkB,QAAQC,IAAR,GAAAC,OAAeV,IACf,IAAMvB,EAAS,iBAAAiC,OAAoBL,EAAY,aAAe,IAA/CK,OAAoDH,EAAa,WAAa,IAA9EG,OAAmFV,EAAe,cAAgB,IAGjI,OACI5B,EAAAC,EAAAC,cAAA,MACIC,IAAKwB,EACLtB,UAAWA,GAEXL,EAAAC,EAAAC,cAAA,QAAMG,UAAU,uBACVqB,EAAcrC,OAAS6B,GAE7BlB,EAAAC,EAAAC,cAAA,QAAMG,UAAU,kBACXsB,6EAOb,OACI3B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACXL,EAAAC,EAAAC,cAAA,MAAIG,UAAU,YACTqB,EAAcjB,IAAItC,KAAK2D,wDAjCpC,OAAQJ,EAAcrC,OAAS,SAHfsB,IAAMC,oCCwBf2B,EArBC,SAAAjD,GACZ8C,QAAQC,IAAR,gBAAAC,OAA4BhD,EAAMkD,SACjC,IAAMC,EAAWnD,EAAMkD,OACrB,IF8D4B,SAAAR,GACjC,IAAKA,EAAgB,OAAO,EAE5B,IAAMU,EAAShB,EACZiB,OAAOX,GACPY,KAAK,SAAAC,GAAA,OAAAA,EAAGjB,eAEX,OAAOc,EAASA,EAAOf,MAAQ,EEpE1BmB,CAAoBxD,EAAM0C,gBAC7B,OACIhC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,sBAAcZ,EAAMyD,UAEpB/C,EAAAC,EAAAC,cAAA,oBAAYuC,EAAZ,MACAzC,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAMC,GAAI,KAAV,aC+FGC,cArGX,SAAAA,IAAc,IAAAlF,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+E,IACVlF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiF,GAAA5E,KAAAH,QACKI,MAAQ,CACT4E,UAAY,GACZC,sBAAuB,GAG3BpF,EAAKqF,aAAerF,EAAKqF,aAAaxE,KAAlBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KACpBA,EAAKsF,YAActF,EAAKsF,YAAYzE,KAAjBZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KARTA,mFAgBNG,KAAKmB,MAAMiE,WAIfpF,KAAKkF,eAHDlF,KAAKmB,MAAMG,QAAQ+D,QAAQ,4CAMnB,IH9BU/E,EG8BVgF,EAAAtF,MH9BUM,EG+BPN,KAAKmB,MAAMb,WH/BUiF,IAAMC,IAF7B,2CAE+C,CAClEC,OAAQ,CACNnF,gBAGHoF,KAAK,SAAA9B,GAAA,IAAA+B,EAAA/B,EAAGgC,KAAQC,QAAX,gBAAAF,EAAqB,GAArBA,GAAwCrD,IAAI,SAAAwD,GAAA,MAK3C,CACLC,SANgDD,EAChDC,SAMA1C,SAPgDyC,EAEhDzC,SAMA2C,cARgDF,EAGhDG,eAMAC,iBATgDJ,EAIhDK,wBGsB4CT,KAAK,SAAAE,GACvCN,EAAK5D,SAAS,CACVsD,UAAWY,IAEf3B,QAAQC,IAAI0B,yCAKP9C,GAAQ,IAAAsD,EAAApG,KACjB,OAAO,WACA8C,IAAWsD,EAAKnB,sBAAsBe,cAClCI,EAAKhG,MAAM6E,sBAAwB,GAClCmB,EAAK1E,SAAS,SAAA2E,GACV,MAAO,CACHpB,sBAAwBoB,EAAUpB,sBAAwB,KAIlEmB,EAAK1E,SAAS,CACV2C,QAAQ,EACRiC,YAAY,KAKpBjF,MAAM,cACN+E,EAAK1E,SAAS,CACV2C,QAAQ,EACRiC,YAAY,uCASnB,IAAA1C,EAMD5D,KAAKiF,uBAAyB,GAH9Be,EAHCpC,EAGDoC,cAHCO,EAAA3C,EAIDsC,wBAJC,IAAAK,EAIkB,GAJlBA,EAKDlD,EALCO,EAKDP,SAIJ,OAAOrD,KAAKI,MAAMkG,WAChBzE,EAAAC,EAAAC,cAACyE,EAAD,CACE3C,eAAiB7D,KAAKI,MAAM6E,sBAC5BL,SAAU5E,KAAKmB,MAAMyD,SACrBP,OAAQrE,KAAKI,MAAMiE,SAGnBxC,EAAAC,EAAAC,cAAA,OAAKG,UAAU,UACXL,EAAAC,EAAAC,cAAC0E,EAAD,KACI5E,EAAAC,EAAAC,cAAC2E,EAAD,CACIpD,QAASqD,IAAO,CAAEX,GAAF7B,OAAArE,OAAA8G,EAAA,EAAA9G,CAAoBoG,KACpC7C,SAAUA,EACVJ,cAAiBjD,KAAKmF,eAG9BtD,EAAAC,EAAAC,cAAC8E,EAAD,CACIhD,eAAgB7D,KAAKI,MAAM6E,uEA3EvC,OAAOjF,KAAKI,MAAM4E,UAAUhF,KAAKI,MAAM6E,8BAd5BzC,IAAMC,WCwEVqE,cAxDb,SAAAA,IAAc,IAAAjH,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA8G,IACZjH,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAgH,GAAA3G,KAAAH,QACKI,MAAQ,CACXgF,YAAY,EACZ/E,KAAM,GACNC,WAAY,IAGdT,EAAKkH,UAAYlH,EAAKkH,UAAUrG,KAAfZ,OAAAa,EAAA,EAAAb,QAAAa,EAAA,EAAAb,CAAAD,KARLA,yEAWJQ,EAAMC,EAAY0G,GAC1BhH,KAAK0B,SAAS,CACZrB,OACAC,aACA8E,YAAY,GACX4B,oCAGI,IAAA1B,EAAAtF,KACP,OACE6B,EAAAC,EAAAC,cAACkF,EAAA,EAAD,KACEpF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,KACErF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,IAELC,OAAQ,SAAAnG,GAAK,OACXU,EAAAC,EAAAC,cAACwF,EAAD,CACEnG,SAAUkE,EAAKyB,UACfzF,QAAWH,EAAMG,aAIvBO,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,QACLC,OAAQ,SAAAnG,GAAK,OACbU,EAAAC,EAAAC,cAACyF,EAAD,CACEpC,WAAYE,EAAKlF,MAAMgF,WACvB9D,QAASH,EAAMG,QACfsD,SAAUU,EAAKlF,MAAMC,KACrBC,WAAYgF,EAAKlF,MAAME,gBAI3BuB,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CACEG,OAAS,kBAAMzF,EAAAC,EAAAC,cAAA,2CAjDTU,aCjBlBgF,IAASH,OAAOzF,EAAAC,EAAAC,cAAC2F,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.f06c8c7a.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Setup extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            name: '',\r\n            difficulty: this.options[0].value\r\n        }\r\n        this.onSubmitHandler = this.onSubmitHandler.bind(this)\r\n        this.onChangeHandler = this.onChangeHandler.bind(this)\r\n        this.redirect = this.redirect.bind(this)\r\n    }\r\n\r\n\r\n    get options () {\r\n        return [\r\n            {\r\n                value: 'easy',\r\n                label: 'Easy'\r\n            },\r\n            {\r\n                value: 'medium',\r\n                label: 'Medium'\r\n            },\r\n            {\r\n                value: 'hard',\r\n                label: 'Hard'\r\n            }\r\n        ]\r\n    }\r\n\r\n    onSubmitHandler (event) {\r\n        event.preventDefault();\r\n\r\n        const {\r\n            name,\r\n            difficulty\r\n        } = this.state\r\n\r\n        if(!name.trim().length) {\r\n            alert('Name jest wymagane')\r\n            return\r\n        }\r\n        this.props.onSubmit(name, difficulty, this.redirect)\r\n        // alert(`${this.state.name} ${this.state.difficulty}`) \r\n\r\n    } \r\n\r\n    redirect () {\r\n        this.props.history.push('/game')\r\n    }\r\n\r\n    onChangeHandler (event) {\r\n        const {\r\n            name,\r\n            value\r\n        } = event.target\r\n\r\n        this.setState({\r\n            [name] : value\r\n        })\r\n    }\r\n\r\n\r\n    renderOption(item) {\r\n        return (\r\n            <option key={item.value} value={item.value}>\r\n                {item.label}\r\n            </option>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='l-centered'>\r\n                <form className='f-start' onSubmit={this.onSubmitHandler}>\r\n                    <label htmlFor='name' className='f-start__label'>Name</label>\r\n                    <input name='name' id='name' className='f-start__control' value={this.state.name} onChange={this.onChangeHandler}/>\r\n                   \r\n                   <label htmlFor='difficulty' className='f-start__label'>Difficulty</label>\r\n                   <select className='f-start__control' name='difficulty' id='difficulty' value={this.state.difficulty} onChange={this.onChangeHandler}>\r\n                        {this.options.map(this.renderOption)}\r\n                   </select>\r\n                    <button className='f-start__action'>Submit</button>\r\n                </form>\r\n            </div>   \r\n        )\r\n    }\r\n}\r\n\r\n\r\nSetup.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired\r\n}\r\nexport default Setup","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Background = props => {\r\n\r\n    return (\r\n        <div className='c-background'>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nBackground.propTypes = {\r\n    children: PropTypes.node.isRequired\r\n}\r\n\r\nexport default Background","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nclass Questions extends React.Component {\r\n   \r\n    renderAnswer = (answer, index) => {\r\n\r\n        return (\r\n            <li \r\n                key={index}\r\n                className='c-question'\r\n                onClick={this.props.onAnswerClick(answer)}\r\n            >\r\n                <span className='c-question__label'>\r\n                    {String.fromCharCode(65 + index)}: {answer}\r\n                </span>\r\n            </li>\r\n\r\n        )\r\n    }\r\n\r\n    render () {\r\n        const {\r\n            question,\r\n            answers\r\n        } = this.props\r\n    \r\n        return (\r\n            <div className='c-questions'>\r\n                <p className='c-questions__title c-question'>\r\n                    {question}\r\n                </p>\r\n                <ul className='c-questions__list'>\r\n                    {answers.map(this.renderAnswer)} \r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nQuestions.propTypes = {\r\n    answers: PropTypes.array,\r\n    questions: PropTypes.string,\r\n    onAnswerClick: PropTypes.func\r\n}\r\nexport default Questions","import axios from 'axios'\r\n\r\nconst questionsUrl = 'http://react-workshop-api.herokuapp.com/'\r\n\r\nexport const fetchQuestions = difficulty => axios.get(questionsUrl, {\r\n  params: {\r\n    difficulty\r\n  }\r\n})\r\n.then(({ data: { results = [] } }) => results.map(({\r\n  category,\r\n  question,\r\n  correct_answer,\r\n  incorrect_answers\r\n}) => ({\r\n  category,\r\n  question,\r\n  correctAnswer: correct_answer,\r\n  incorrectAnswers: incorrect_answers\r\n})))\r\n\r\nexport const questionsList = [\r\n  {\r\n    price: 1000000,\r\n    isGuaranteed: true\r\n  },\r\n  {\r\n    price: 500000,\r\n    isGuaranteed: false\r\n  },\r\n  {\r\n    price: 250000,\r\n    isGuaranteed: false\r\n  },\r\n  {\r\n    price: 125000,\r\n    isGuaranteed: false\r\n  },\r\n  {\r\n    price: 75000,\r\n    isGuaranteed: false\r\n  },\r\n  {\r\n    price: 40000,\r\n    isGuaranteed: true\r\n  },\r\n  {\r\n    price: 20000,\r\n    isGuaranteed: false\r\n  },\r\n  {\r\n    price: 10000,\r\n    isGuaranteed: false\r\n  },\r\n  {\r\n    price: 5000,\r\n    isGuaranteed: false\r\n  },\r\n  {\r\n    price: 2000,\r\n    isGuaranteed: false\r\n  },\r\n  {\r\n    price: 1000,\r\n    isGuaranteed: true\r\n  },\r\n  {\r\n    price: 500,\r\n    isGuaranteed: false\r\n  }\r\n]\r\n\r\nexport const getGuaranteedReward = questionNumber => {\r\n  if (!questionNumber) return 0\r\n\r\n  const reward = questionsList\r\n    .slice(-questionNumber)\r\n    .find(({ isGuaranteed }) => isGuaranteed)\r\n\r\n  return reward ? reward.price : 0\r\n}","import React from 'react';\r\nimport { questionsList } from './helpers';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SidePanel extends React.Component {\r\n\r\n    get lastQuestionIndex () {\r\n        return (questionsList.length - 1)\r\n    }\r\n\r\n    renderItem = ({price, isGuaranteed}, index) => {\r\n        const {\r\n            questionNumber\r\n        } = this.props\r\n\r\n        const isCurrent = questionNumber === (this.lastQuestionIndex - index)\r\n        const isAnswered = questionNumber > (this.lastQuestionIndex - index)\r\n        console.log(`${isGuaranteed}`)\r\n        const className = `c-status__item${isCurrent ? ' is-active' : ''}${isAnswered ? ' is-done' : ''}${isGuaranteed ? ' is-special' : ''}`\r\n        \r\n\r\n        return (\r\n            <li \r\n                key={price}\r\n                className={className}\r\n            >\r\n                <span className='c-status__indicator'>\r\n                    { questionsList.length - index}\r\n                </span>\r\n                <span className='c-status-value'>\r\n                    {price}\r\n                </span>\r\n            </li>\r\n        )\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className='c-side'>\r\n                <ul className='c-status'>\r\n                    {questionsList.map(this.renderItem)}\r\n                \r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nSidePanel.propTypes = {\r\n    questionNumber: PropTypes.number\r\n}\r\nexport default SidePanel","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {getGuaranteedReward} from './helpers'\r\nimport {\r\n    Link \r\n} from 'react-router-dom';\r\n\r\nconst EndGame = props => {\r\n    console.log(`czy wygrana: ${props.hasWon}`);\r\n     const WonPrice = props.hasWon\r\n     ? 1000000 \r\n     : getGuaranteedReward(props.questionNumber);\r\n    return (    \r\n        <div className='l-end'>\r\n            <p>Game over {props.username}</p>\r\n\r\n            <p>You won {WonPrice} $</p>\r\n            <Link to={'/'}>\r\n                Restart\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nEndGame.propTypes = {\r\n    questionNumber: PropTypes.number\r\n}\r\n\r\nexport default EndGame","import React from 'react';\r\nimport Background from './Background';\r\nimport Questions from './Questions';\r\nimport SidePanel from './SidePanel';\r\nimport { fetchQuestions } from './helpers';\r\nimport shuffle from 'lodash/shuffle'\r\nimport EndGame from './EndGame';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Game extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            questions : [],\r\n            currentQuestionNumber: 0\r\n        }\r\n\r\n        this.getQuestions = this.getQuestions.bind(this);\r\n        this.checkAnswer = this.checkAnswer.bind(this);\r\n    }\r\n\r\n    get currentQuestionNumber () {\r\n        return this.state.questions[this.state.currentQuestionNumber]\r\n    }\r\n\r\n    componentDidMount () {\r\n        if(!this.props.hasStarted) {\r\n            this.props.history.replace('/')\r\n            return\r\n        }\r\n        this.getQuestions();\r\n    }\r\n\r\n    getQuestions () {\r\n        fetchQuestions(this.props.difficulty).then(data => {\r\n            this.setState({\r\n                questions: data\r\n            });\r\n            console.log(data);\r\n        })\r\n    }\r\n    \r\n\r\n    checkAnswer (answer) {\r\n        return () => {\r\n            if(answer === this.currentQuestionNumber.correctAnswer) {\r\n                if(this.state.currentQuestionNumber < 11) {\r\n                    this.setState(prevState => {\r\n                        return {\r\n                            currentQuestionNumber : prevState.currentQuestionNumber + 1\r\n                        }\r\n                    })\r\n                } else {\r\n                    this.setState({\r\n                        hasWon: true,\r\n                        isFinished: true\r\n                    })\r\n\r\n                }\r\n            } else {\r\n                alert('przegrales')\r\n                this.setState({\r\n                    hasWon: false,\r\n                    isFinished: true\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    // if(this.state.isFinished) {\r\n    //     return\r\n    // }\r\n    render() {\r\n\r\n        const {\r\n            correctAnswer,\r\n            incorrectAnswers = [],\r\n            question\r\n        } = this.currentQuestionNumber || {}\r\n\r\n\r\n        return this.state.isFinished\r\n        ? <EndGame \r\n            questionNumber ={this.state.currentQuestionNumber}\r\n            username={this.props.username}\r\n            hasWon={this.state.hasWon}\r\n            /> \r\n        : (\r\n            <div className='l-game'>\r\n                <Background>\r\n                    <Questions \r\n                        answers={shuffle([correctAnswer, ...incorrectAnswers])}\r\n                        question={question} \r\n                        onAnswerClick = {this.checkAnswer}\r\n                    />\r\n                </Background>\r\n                <SidePanel \r\n                    questionNumber={this.state.currentQuestionNumber}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nGame.propTypes = {\r\n    username: PropTypes.string,\r\n    history: PropTypes.object,\r\n    hasStarted: PropTypes.bool,\r\n    difficulty: PropTypes.string\r\n}\r\n\r\nexport default Game","import React, { Component, Fragment } from 'react';\nimport {\n  BrowserRouter,\n  Route,\n  Switch\n} from'react-router-dom'\nimport Setup from './Setup';\nimport Game from './Game';\n// const Name  = props => {\n//   return <div>{props.name}</div>\n// }\n\n// Name.propTypes = {\n//   name: PropTypes.string\n// }\n\n// Name.defaultProps = {\n//   name: 'Nie podales name'\n// }\n\n\n\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      hasStarted: false,\n      name: '',\n      difficulty: ''\n    }\n\n    this.setupGame = this.setupGame.bind(this)\n  }\n\n  setupGame(name, difficulty, callback) {\n    this.setState({\n      name,\n      difficulty,\n      hasStarted: true\n    }, callback)\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route \n            exact\n            path='/'\n            // component={Setup} \n            render={props => (\n              <Setup \n                onSubmit={this.setupGame} \n                history = {props.history}\n              />\n            )}\n          />\n          <Route\n            exact\n            path='/game'\n            render={props => (\n            <Game \n              hasStarted={this.state.hasStarted}\n              history={props.history} \n              username={this.state.name}\n              difficulty={this.state.difficulty}\n            />\n          )}\n          />\n          <Route \n            render ={() => <p>404 page not found</p>}\n          />\n        </Switch>\n      </BrowserRouter>\n\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}